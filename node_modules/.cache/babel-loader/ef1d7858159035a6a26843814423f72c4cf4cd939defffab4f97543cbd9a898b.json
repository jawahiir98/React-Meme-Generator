{"ast":null,"code":"var _jsxFileName = \"I:\\\\React-Project\\\\Meme Generator\\\\meme-generator\\\\src\\\\components\\\\Meme.js\",\n  _s = $RefreshSig$();\nimport Data from '../data.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  //const [memeImage, setMemeImage] = React.useState(\"\")\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState(Data);\n  function getMemeImage() {\n    const memes = Data.data.memes;\n    const randomNumber = Math.floor(Math.random() * memes.length);\n    const url = memes[randomNumber].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: url\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"meme--image\",\n      src: memeImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Meme, \"ZAi4SxbHe+/CChTSJjy9t8Xnjcw=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["Data","React","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","getMemeImage","memes","data","randomNumber","Math","floor","random","length","url","prevMeme","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","memeImage","_c","$RefreshReg$"],"sources":["I:/React-Project/Meme Generator/meme-generator/src/components/Meme.js"],"sourcesContent":["\r\nimport Data from '../data.js'\r\nimport React from 'react'\r\n\r\nexport default function Meme(){\r\n\r\n    //const [memeImage, setMemeImage] = React.useState(\"\")\r\n    const [meme, setMeme] = React.useState(\r\n        {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImage: \"http://i.imgflip.com/1bij.jpg\"\r\n        }\r\n    )\r\n    const [allMemeImages, setAllMemeImages] = React.useState(Data)\r\n    function getMemeImage(){\r\n        const memes = Data.data.memes\r\n        const randomNumber = Math.floor(Math.random() * memes.length)\r\n        const url = memes[randomNumber].url\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            randomImage: url\r\n        }))\r\n    }\r\n    \r\n    \r\n    return(\r\n        <main>\r\n            <div className=\"form\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Top text\"\r\n                    className=\"form--input\"\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Bottom text\"\r\n                    className=\"form--input\"\r\n                />\r\n                <button \r\n                    className=\"form--button\"\r\n                    onClick={getMemeImage}\r\n                >\r\n                    Get a new meme image ðŸ–¼\r\n                </button>\r\n            </div>\r\n            <img className='meme--image' src={memeImage} />\r\n        </main>\r\n    )\r\n}"],"mappings":";;AACA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAE1B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAClC;IACIC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACjB,CACJ,CAAC;EACD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,KAAK,CAACO,QAAQ,CAACR,IAAI,CAAC;EAC9D,SAASc,YAAYA,CAAA,EAAE;IACnB,MAAMC,KAAK,GAAGf,IAAI,CAACgB,IAAI,CAACD,KAAK;IAC7B,MAAME,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,KAAK,CAACM,MAAM,CAAC;IAC7D,MAAMC,GAAG,GAAGP,KAAK,CAACE,YAAY,CAAC,CAACK,GAAG;IACnCf,OAAO,CAACgB,QAAQ,KAAK;MACjB,GAAGA,QAAQ;MACXZ,WAAW,EAAEW;IACjB,CAAC,CAAC,CAAC;EACP;EAGA,oBACInB,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAKsB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBrB,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBF,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF5B,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBF,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF5B,OAAA;QACIsB,SAAS,EAAC,cAAc;QACxBO,OAAO,EAAElB,YAAa;QAAAU,QAAA,EACzB;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACN5B,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAACQ,GAAG,EAAEC;IAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEf;AAAC1B,EAAA,CA7CuBD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}